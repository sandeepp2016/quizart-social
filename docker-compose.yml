version: '2'
services:
  microservice-mesh-base:
    container_name: microservice-mesh-base
    build: microservices/microservice-mesh-base
    image: boilerplate/mesh-base
    network_mode: host
    restart: always
  # microservice-register-user:
  #   container_name: microservice-register-user
  #   build: microservices/LoginAuthentication/registerUser
  #   image: boilerplate/microservice-register-user
  #   network_mode: host
  #   restart: always
  #   depends_on:
  #     - microservice-mesh-base
  #     - db
  #   environment:
  #     MONGO_HOST: localhost
  #     MONGO_PORT: 27017
  #     MONGO_DB_NAME: quizRT4
  # microservice-verify-token:
  #   container_name: microservice-verify-token
  #   build: microservices/LoginAuthentication/verifyToken
  #   image: boilerplate/microservice-verify-token
  #   network_mode: host
  #   restart: always
  #   depends_on:
  #     - microservice-mesh-base
  microservice-accounts:
    container_name: microservice-accounts
    build: microservices/microservice-accounts
    image: boilerplate/accounts
    network_mode: host
    restart: always
    depends_on:
      - microservice-mesh-base
    environment:
      MONGO_URL: 'mongodb://localhost:27017/boilerplate-production'
  microservice-tournament-section:
    container_name: microservice-tournament-section
    build: microservices/tournamentSection
    image: boilerplate/microservice-tournament-section
    network_mode: host
    restart: always
    depends_on:
      - microservice-mesh-base
      - db
    environment:
      MONGO_HOST: localhost
      MONGO_PORT: 27017
      MONGO_DB_NAME: quizRT4
  microservice-random-question:
    container_name: microservice-random-question
    build: microservices/randomQuestion
    image: boilerplate/microservice-random-question
    network_mode: host
    restart: always
    depends_on:
      - db
      - microservice-mesh-base
    environment:
      MONGO_HOST: localhost
      MONGO_PORT: 27017
      MONGO_DB_NAME: quizRT4
  microservice-gameplay:
      container_name: microservice-gameplay
      build: microservices/gameplay
      image: boilerplate/microservice-gameplay
      network_mode: host
      restart: always
      depends_on:
        - microservice-mesh-base
        - microservice-random-question
        - redis
      environment:
        REDIS_URL: localhost
        REDIS_PORT: 6379
  microservice-all-tournaments:
    container_name: microservice-all-tournaments
    build: microservices/allTournaments
    image: boilerplate/microservice-all-tournaments
    network_mode: host
    restart: always
    depends_on:
      - microservice-mesh-base
      - db
    environment:
      MONGO_HOST: localhost
      MONGO_PORT: 27017
      MONGO_DB_NAME: quizRT4
  microservice-jwt:
    container_name: microservice-jwt
    build: microservices/microservice-jwt
    image: boilerplate/jwt
    network_mode: host
    restart: always
    depends_on:
      - microservice-mesh-base
  microservice-favourite-topic:
    container_name: microservice-favourite-topic
    build: microservices/myFavTopics
    image: boilerplate/microservice-favourite-topic
    network_mode: host
    restart: always
    depends_on:
      - db
      - microservice-mesh-base
  microservice-alltopics:
    container_name: microservice-alltopics
    build: microservices/allTopics
    image: boilerplate/alltopics
    network_mode: host
    restart: always
    depends_on:
      - microservice-mesh-base
      - db
    environment:
          MONGO_HOST: localhost
          MONGO_PORT: 27017
          MONGO_DB_NAME: quizRT4
  microservice-like-topic:
    container_name: microservice-like-topic
    build: microservices/likesTopic
    image: boilerplate/microservice-like-topic:0.1.0
    network_mode: host
    restart: always
    depends_on:
      - db
      - microservice-mesh-base
  microservice-delete-liked-topic:
    container_name: microservice-delete-liked-topic
    build: microservices/delLikedTopic
    image: boilerplate/microservice-delete-liked-topic:0.1.0
    network_mode: host
    restart: always
    depends_on:
      - db
      - microservice-mesh-base
  microservice-chatrooms:
    container_name: microservice-chatrooms
    build: microservices/microservice-chatrooms
    image: boilerplate/microservice-chatrooms
    network_mode: host
    restart: always
    depends_on:
      - db
      - microservice-mesh-base
  http-server:
    container_name: http-server0
    build: microservices/http-server
    image: boilerplate/http-server
    network_mode: host
    restart: always
    depends_on:
      - microservice-mesh-base
  db:
    container_name: mongo
    image: mvertes/alpine-mongo
    restart: always
    depends_on:
      - microservice-mesh-base
    expose:
      - 27017
    ports:
      - 27017:27017
  redis:
    container_name: redis
    image: smebberson/alpine-redis
    restart: always
    expose:
      - 6379
    ports:
      - 6379:6379
